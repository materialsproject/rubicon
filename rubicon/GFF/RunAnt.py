import glob
from topology import AC, TopBond, TopAngle, TopDihedral, TopImDihedral, TopBondFF, TopAngleFF

__author__ = 'navnidhirajput'

from Antechamber_wrapper import Antechamber
from pymatgen.core.structure import Molecule
from GFF import GFF, GFF_library


coords = [[0.000000, 0.000000, 0.000000],
          [0.000000, 0.000000, 1.089000],
          [1.026719, 0.000000, -0.363000],
          [-0.513360, -0.889165, -0.363000],
          [-0.513360, 0.889165, -0.363000]]

coords1 = [[2.439852592, -0.695560517, -0.059660824],
           [1.215789897, -1.364471113, -0.035273969],
           [0.006178611, -0.680052792, -0.033906341],
           [0.011432936, 0.736021177, -0.04523679],
           [1.244501499, 1.412040006, -0.073274723],
           [2.446426478, 0.695310046, -0.032857094],
           [1.197599275, -2.451378243, -0.021485707],
           [3.387001913, 1.235096154, 0.026641733],
           [-2.291988347, 0.715581207, -0.026151],
           [-2.289998326, -0.662369562, -0.008671972],
           [-3.215496455, 1.282918736, -0.023663871],
           [-3.211335899, -1.233000313, 0.009662803],
           [-1.151603286, 1.437111014, -0.04771053],
           [-1.147520606, -1.381134987, -0.0136565071],
           [3.633832306, -1.424386617, 0.039840294],
           [3.721097543, -1.873962237, 0.949467681],
           [4.463123007, -0.872224014, -0.160434368],
           [1.285632406, 2.82422801, 0.069252241],
           [0.37592053, 3.218997493, -0.180146967],
           [2.059832605, 3.263215412, -0.415601215]]

mol1 = Molecule(["C", "H", "H", "H", "H"], coords)

mol2 = Molecule(
    ["C", "C", "C", "C", "C", "C", "H", "H", "C", "C", "H", "H", "N", "N", "N",
     "H", "H", "N", "H", "H"], coords1)
#['C'] * 5  + ["H"] * 10



mols = [mol2]

"""

making pdb file for molecules,running antechamber
parsing the output to GFF class to read force field parameters
and cleaning all the files generated by antechamber.
"""

gff_list = []
for mol in mols:
    my_ant = Antechamber(mol)
    my_ant.convert_to_pdb(mol, 'mol.pdb')
    my_ant.run_antechamber('mol.pdb')
    gff = my_ant.parse_output()
    ac = AC()

    ac.read_atomIndex('ANTECHAMBER_AC.AC')
    ac.read_atomType('ANTECHAMBER_AC.AC')
    print "atom_name:gaff_atom_type",ac.atom_gaff

    bd = TopBond()
    bd.get_bonds('mol.rtf')
    #print "BONDS", bd.bonds

    an = TopAngle()
    an.get_angles('mol.rtf')
    #print "ANGLES",an.angles

    dh = TopDihedral()
    dh.get_dihedrals('mol.rtf')
    #print "DIHEDRALS",dh.dihedrals

    imdh = TopImDihedral()
    imdh.get_imdihedrals('mol.rtf')
    #print "IMPH",imdh.imdihedrals

    my_gff = GFF()
    my_gff.read_forcefield_para('mol.prm')
    print "gaff_bonds",my_gff.bonds
    print "gaff_angles",my_gff.angles
    print "gaff_dihedrals",my_gff.dihedrals
    #d1 = my_gff1.to_dict
    #print d1


    atom_gaff = AC()
    atom_gaff.read_atomType('ANTECHAMBER_AC.AC')

    my_gff_lib = GFF_library()
    my_gff_lib.append_gff()

    my_gff2 = GFF()
    my_gff2.read_forcefield_para('mol.prm')

    my_topbondff = TopBondFF()
    my_topbondff.get_FF_bonds(my_gff2.bonds, bd.bonds, atom_gaff.atom_gaff)
    print "bond_label:bond_type,bond_parameter",my_topbondff.topbondFF

    my_topangleff = TopAngleFF()
    my_topangleff.get_FF_angles(my_gff2.angles, an.angles, atom_gaff.atom_gaff)

    my_ant.clean_files()
    gff_list.append(gff)











