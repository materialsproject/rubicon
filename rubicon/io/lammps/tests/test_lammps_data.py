# coding: utf-8

from __future__ import division, print_function, unicode_literals, absolute_import

import unittest

import numpy as np

from pymatgen.core.structure import Molecule

from rubicon.io.lammps.data import LammpsData


__author__ = 'Kiran Mathew'
__email__ = 'kmathew@lbl.gov'


class TestLammpsData(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        h2o_coords = [[9.626, 6.787, 12.673],
                      [9.626, 8.420, 12.673],
                      [10.203, 7.604, 12.673]]
        molecule = Molecule(["H", "H", "O"], h2o_coords)
        box_size = [0, 0, 0, 10, 10, 10]
        cls.lammps_data = LammpsData(molecule, box_size)

    def test_system_info(self):
        atomic_masses = [[1,1.00794], [2, 1.00794], [3, 15.9994]]
        atoms_data = [[1, 1, 4.4875653445297559, 4.1830559491720365, 5.0000000000000018],
                      [2, 1, 4.4875653445297559, 5.8160559491720365, 5.0000000000000018],
                      [3, 2, 5.0645653445297558, 5.0000559491720367, 5.0000000000000018]]
        natom_types = 2
        natoms = 3
        self.assertEqual(self.lammps_data.atomic_masses, atomic_masses)
        np.testing.assert_almost_equal(self.lammps_data.atoms_data, atoms_data, decimal=10)
        #self.assertEqual(self.lammps_data.atoms_data, atoms_data)
        self.assertEqual(self.lammps_data.natom_types, natom_types)
        self.assertEqual(self.lammps_data.natoms, natoms)

    def test_string_representation(self):
        string_rep = 'Data file generated by rubicon\n\n' \
                     '3 atoms\n\n' \
                     '2 atom types\n\n' \
                     '0 10.0 xlo xhi\n' \
                     '0 10.0 ylo yhi\n' \
                     '0 10.0 zlo zhi\n\n' \
                     'Masses \n\n' \
                     '1 1.00794\n' \
                     '2 1.00794\n' \
                     '3 15.9994\n\n' \
                     'Atoms \n\n' \
                     '1 1 4.48756534453 4.18305594917 5.0\n' \
                     '2 1 4.48756534453 5.81605594917 5.0\n' \
                     '3 2 5.06456534453 5.00005594917 5.0'
        self.assertEqual(str(self.lammps_data), string_rep)

if __name__ == "__main__":
    unittest.main()
